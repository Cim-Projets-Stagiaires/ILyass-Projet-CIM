<div class="form-body">
    <div class="form-wrapper">
    <h2>Modifier une demande</h2>
    <form id="edit-form" method="POST" action="/plat/panel/edit-form/submit/{{form.id}}">

    <div class="form-row">

        <div class="form-group">
            <label for="name">Nom:</label>
            <input type="text" id="name" name="name" value="{{form.name}}" class="form-control" required>
        </div>

        <div class="form-group">
            <label for="type">Type:</label>
            <select name="type" id="type" required onchange="loadStructures()">
                <option value="" disabled>--Select Type--</option>
                <option value="labs" {{#if (eq currentType 'labs')}}selected{{/if}}>Labs</option>
                <option value="equipes" {{#if (eq currentType 'equipes')}}selected{{/if}}>Equipes</option>
                <option value="centres" {{#if (eq currentType 'centres')}}selected{{/if}}>Centres</option>
            </select>
        </div>

        <div class="form-group">
            <label for="structure">Structure:</label>
            <select id="structure" name="structure_name">
                <option value="" disabled selected>--Select Structure--</option>
            {{#each allStructures}}
                <option value="{{this.id}}" {{#if (eq this.id ../form.structure_id)}}selected{{/if}}>{{this.name}}</option>
            {{/each}}
            </select>
        </div>

    </div>

    <div class="form-row">
        <div class="condition-box">
            <h4>CONDITIONS D'ANALYSE ET IDENTIFICATION DES ÉCHANTILLONS</h4>
            <div class="form-field">
                <label for="nbr_ech">Nombre d'échantillons :</label>
                <input type="number" id="nbr_ech" name="nbr_ech" value="{{form.nbr_ech}}" required>
            </div>
            <div class="form-field">
                <label for="nbr_rep">Nombre de répétition si nécessaire :</label>
                <input type="number" id="nbr_rep" name="nbr_rep" value="{{form.nbr_rep}}" required>
            </div>
            <div class="form-field">
                <label for="nature-echantillons">Nature des échantillons (ex : bactérie, sang, plante, ...) :</label>
                <input type="text" id="nature-echantillons" name="nature" value="{{form.nature}}" required>
            </div>
            <div class="form-field radio-group">
            <span>Molécule :</span>
                <label><input type="radio" name="molecule" value="ADN" {{#if (eq form.molecule 'ADN')}}checked{{/if}}> ADN</label>
                <label><input type="radio" name="molecule" value="ARN" {{#if (eq form.molecule 'ARN')}}checked{{/if}}> ARN</label>
                <label><input type="radio" name="molecule" value="Proteine" {{#if (eq form.molecule 'Proteine')}}checked{{/if}}> Protéine</label>
                <label><input type="radio" name="molecule" value="Autre" {{#if (eq form.molecule 'Autre')}}checked{{/if}}> Autre</label>
            </div>
            <div class="form-field">
                <label for="préciser">à préciser :</label>
                <input type="text" id="préciser" name="molecule_precise" value="{{form.molecule_precise}}" required>
            </div>


            <div class="form-field radio-group">
                <span>Toxicité :</span>
                <label><input type="radio" name="toxicite" value="Toxiques" {{#if (eq form.toxicite 'Toxiques')}}checked{{/if}}> Toxiques</label>
                <label><input type="radio" name="toxicite" value="Non toxiques" {{#if (eq form.toxicite 'Non toxiques')}}checked{{/if}}> Non toxiques</label>
            </div>



            <span class="NB">NB: C'est le numéro de l'échantillon qui sera affiché au niveau du rapport d'analyse. Si vous avez plus que 32 échantillons veuillez utiliser une fiche supplémentaire.</span>
            <h4>CONDITIONS D'ANALYSE ET IDENTIFICATION DES ÉCHANTILLONS</h4>
            <span>Veuillez préciser les conditions de stockage de vos échantillons, nécessaires à respecter, lors de leur séjour au CAC (T°, humidité, ...) :</span>
            <textarea id="conditions-stockage" name="conditions_stock">{{form.conditions_stock}}</textarea>
            <div class="form-field radio-group">
                <span>Voulez-vous récupérer le reste des échantillons (s'il en reste) après analyse ?</span>
                <label><input type="radio" name="recuperation_echantillon" value="oui" {{#if (eq form.recup "oui")}}checked{{/if}}> Oui</label>
                <label><input type="radio" name="recuperation_echantillon" value="non" {{#if (eq form.recup "non")}}checked{{/if}}> Non</label>
            </div>
            <span class="NB">Si oui, la récupération du reste des échantillons (s'il en reste) doit se faire au maximum 15 jours
                 après la réception des résultats d'analyse. Dépassant ce délai, ils seront détruits. Si aucune case n'est cochée, les 
                 échantillons seront détruits automatiquement.</span>
        </div>


        <div class="actes-box">
            <h4>Les actes</h4>
            <ul class="actes-list">
        <li>
          <label><input type="checkbox" name="actes" value="Spectrophotometre d'absorption atomique" {{isChecked "Spectrophotometre d'absorption atomique" form.actes}} data-price="750"> Spectrophotomètre d'absorption atomique</label>
          <span class="price">750 DH</span>
        </li>
        <li>
          <label><input type="checkbox" name="actes" value="Spectrophotometre a UV" {{isChecked "Spectrophotometre a UV" form.actes}} data-price="700"> Spectrophotomètre à UV</label>
          <span class="price">700 DH</span>
        </li>
        <li>
          <label><input type="checkbox" name="actes" value="Physico chimie de l'eau" {{isChecked "Physico chimie de l'eau" form.actes}} data-price="800"> Physico chimie de l'eau</label>
          <span class="price">800 DH</span>
        </li>
        <li>
          <label><input type="checkbox" name="actes" value="Physico chimie des aliments" {{isChecked "Physico chimie des aliments" form.actes}} data-price="800"> Physico chimie des aliments</label>
          <span class="price">800 DH</span>
        </li>
        <li>
          <label><input type="checkbox" name="actes" value="Calorimetrie" {{isChecked "Calorimetrie" form.actes}} data-price="675"> Calorimétrie</label>
          <span class="price">675 DH</span>
        </li>
      </ul>


            <div class="total-price">
                <h4>Prix</h4>
                <strong>Total :</strong> <span name="prix" id="total-price-value">{{form.prix}}</span>
                <span class="PS">Le prix peut varier selon l'origine de la structure</span>
            </div>
        </div>


    </div>



    <div class="form-footer">
        <a href="/plat/panel"><button type="button" class="btn-cancel">Annuler</button></a>
        <button type="submit" value="Submit" class="btn-submit">Mettre à jour</button>
    </div>
    </form>
    </div>
</div>



<script>

    // Helper function to check if an act is selected
    Handlebars.registerHelper('isSelected', function(actValue, selectedActes) {
    return selectedActes.includes(actValue);
    });

  function loadStructures() {
  const typeSelect = document.getElementById('type');
  const structureSelect = document.getElementById('structure');
  const type = typeSelect.value;
  
  // Clear current structure options
  structureSelect.innerHTML = '<option value="" disabled selected>--Select Structure--</option>';

  // Fetch structures based on selected type
  fetch(`/plat/formulaire/structures/${type}`)
    .then(response => response.json())
    .then(structures => {
      structures.forEach(structure => {
        const option = document.createElement('option');
        option.value = structure.name;
        option.textContent = structure.name;
        structureSelect.appendChild(option);
      });
    })
    .catch(error => console.error('Error loading structures:', error));
}


document.getElementById('type').addEventListener('change', function() {
  var type = this.value;
  fetch('/structures/' + type)
    .then(function(response) {
      return response.json();
    })
    .then(function(structures) {
      var structureSelect = document.getElementById('structure'); // Make sure you have this ID in your <select> for structures
      structureSelect.innerHTML = '';
      structures.forEach(function(structure) {
        var option = document.createElement('option');
        option.value = structure.id;
        option.textContent = structure.name;
        structureSelect.appendChild(option);
      });
    });
});


function updateStructures() {
        var typeSelect = document.getElementById('structure_type');
        var nameSelect = document.getElementById('structure_name');
        var selectedType = typeSelect.options[typeSelect.selectedIndex].value;
        
        // Clear the current structures
        while (nameSelect.options.length > 0) {
            nameSelect.remove(0);
        }
        
        // Add a placeholder
        var defaultOption = new Option('--Select Structure--', '', false, false);
        defaultOption.disabled = true;
        defaultOption.selected = true;
        nameSelect.appendChild(defaultOption);

        // Populate the dropdown with structures of the selected type
        fetch(`/get-structures?type=${selectedType}`)
        .then(function(response) {
            return response.json();
        })
        .then(function(structures) {
            structures.forEach(function(structure) {
                var option = new Option(structure.name, structure.name, false, false);
                nameSelect.appendChild(option);
            });
        })
        .catch(function(error) {
            console.error('Error:', error);
        });
    }

    // Initialize the structures dropdown when the page loads
    document.addEventListener('DOMContentLoaded', function() {
        updateStructures();
    });



document.querySelector('form').addEventListener('submit', function(event) {
  const checkboxes = document.querySelectorAll('.actes-list input[type="checkbox"]:checked');
  if (checkboxes.length === 0) {
    event.preventDefault(); // Stop the form from submitting
    alert('Please select at least one acte.');
  }
});




document.addEventListener('DOMContentLoaded', () => {
    const actesCheckboxes = document.querySelectorAll('.actes-list input[type="checkbox"]');
    let totalPrice = parseFloat(document.getElementById('total-price-value').textContent);

    const updateTotalPrice = (amount, isChecked) => {
      if (isChecked) {
        totalPrice += amount;
      } else {
        totalPrice -= amount;
      }
      document.getElementById('total-price-value').textContent = totalPrice.toFixed(2);
    };

    actesCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', (event) => {
        const price = parseFloat(event.target.getAttribute('data-price'));
        updateTotalPrice(price, event.target.checked);
      });
    });
  });



</script>
